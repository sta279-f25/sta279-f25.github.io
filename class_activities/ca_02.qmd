---
title: "Activity: Data wrangling with NYC flights"
format: html
editor: source
---

**Instructions:** 

* Work with a neighbor to answer the following questions 
* To get started, download the [class activity template](https://sta279-f25.github.io/class_activities/ca_02_template.qmd) file
* When you are finished, render the file as an HTML and submit the HTML to Canvas (let me know if you encounter any problems)

In this activity, you will practice using `dplyr` functions for data manipulation.

## Packages

For this activity, we will need the `nycflights13` and `tidyverse` package. Recall that you can load these packages with

```{r, eval=F}
library(nycflights13)
library(tidyverse)
```

If a package is not installed, recall that you can install it with `install.packages`. For example:

```{r, eval=F}
install.packages("nycflights13")
```

**Important:** Never include `install.packages` in a Quarto or R Markdown file! This only needs to be run in the R console.


## Data

You will work with the `flights` data from the `nycflights13` package. Run the following code in your console to learn more about the `flights` dataset:

```{r, eval=F}
?flights
```

## Questions

Flights departing late will probably arrive late. We can look at the relationship between departure delay and arrival delay with a scatterplot:

```{r, echo=F, message=F, warning=F, fig.align='center', fig.width=6, fig.height=4}
library(tidyverse)
library(nycflights13)

flights %>%
  drop_na() %>%
  sample_n(5000) %>%
  ggplot(aes(x = dep_delay,
             y = arr_delay)) +
  geom_point(size = 1.5) +
  labs(x = "Departure delay (minutes)",
       y = "Arrival delay (minutes)") +
  theme_bw() +
  theme(text = element_text(size=20))
```

One way to summarize the relationship between two quantitative variables is with the *correlation*, which measures the strength of the linear relationship between the two variables. Correlation is a number between -1 and 1; a correlation close to -1 indicates a strong negative relationship, while a correlation close to 1 indicates a strong positive relationship, and a correlation of 0 indicates no relationship.

1. In R, we calculate correlation with the *cor* function. Fill in the code below to calculate the correlation between departure delay and arrival delay (`use = "complete.obs"` means "Ignore the rows with NAs in either of the two variables"):

```r
flights |>
  summarize(delay_cor = cor(..., ..., use = "complete.obs"))
```

<SCRIPT>
function ShowAndHide(divid) {
    var x = document.getElementById(divid);
    if (x.style.display == 'none') {
        x.style.display = 'block';
    } else {
        x.style.display = 'none';
    }
}
</SCRIPT>

<BUTTON ONCLICK="ShowAndHide('q1_solution')">Solution</BUTTON>

<DIV ID="q1_solution" STYLE="display:none">
```r
flights |>
  summarize(delay_cor = cor(dep_delay, arr_delay, use = "complete.obs"))
```
</DIV>

2. Does the correlation between departure delay and arrival delay depend on which airport the flight departs from? We can use the `group_by` function to group the data before calculating correlation. Fill in the code below to calculate the correlation for each airport (EWR, JFK, and LGA).

```r
flights |>
  group_by(...) |>
  summarize(delay_cor = cor(..., ..., use = "complete.obs"))
```

<BUTTON ONCLICK="ShowAndHide('q2_solution')">Solution</BUTTON>

<DIV ID="q2_solution" STYLE="display:none">
```r
flights |>
  group_by(origin) |>
  summarize(delay_cor = cor(dep_delay, arr_delay, use = "complete.obs"))
```
</DIV>

3. How does the amount of time gained vary across airlines? Fill in the following code to calculate the average time gained and the standard deviation of time gained for each airline.

```r
flights |>
  mutate(time_gained = ...) |>
  group_by(...) |>
  summarize(avg_time_gained = ...,
            sd_time_gained = ...)
```

<BUTTON ONCLICK="ShowAndHide('q4_solution')">Solution</BUTTON>

<DIV ID="q4_solution" STYLE="display:none">
```r
flights |>
  mutate(time_gained = dep_delay - arr_delay) |>
  group_by(carrier) |>
  summarize(avg_time_gained = mean(time_gained, na.rm=T),
            sd_time_gained = sd(time_gained, na.rm=T))
```
</DIV>

4. Now let's look more at the different airlines. Which airport is the most common departure airport for American Airlines (AA) flights? Fill in the following code (you may need to look up documentation for the `count` function!).

```r
flights |>
  filter(... == "AA") |>
  count(...)
```

<BUTTON ONCLICK="ShowAndHide('q5_solution')">Solution</BUTTON>

<DIV ID="q5_solution" STYLE="display:none">
```r
flights |>
  filter(carrier == "AA") |>
  count(origin)
```
</DIV>

5. Occasionally, flights actually depart early. How many American Airlines flights departed early?

```r
flights |>
  filter(carrier ..., dep_delay ...) |>
  count()
```

*Hint: in the previous question you used the logical operator `==` in your filter. Here is a table of other logical operators:*

| operator | definition | operator | definition |
| --- | --- | --- | --- |
| `<`         | less than | `x | y` | `x` OR `y` |
| `<= ` | less than or equal to | `is.na(x)` | test if `x` is `NA` |
| `>` | greater than | `!is.na(x)` |  test if `x` is not `NA` |
| `>=` | greater than or equal to | `x %in% y` | test if `x` is in `y` |
| `==` | exactly equal to | `!(x %in% y)`| test if `x` is not in `y`|
| `!=` | not equal to | `!x` | not `x` |
| `x & y` | `x` AND `y` | | |

<BUTTON ONCLICK="ShowAndHide('q6_solution')">Solution</BUTTON>

<DIV ID="q6_solution" STYLE="display:none">
```r
flights |>
  filter(carrier == "AA", dep_delay < 0) |>
  count()
```
</DIV>

6. How many American Airlines flights had a departure delay of between 0 and 10 minutes?

<BUTTON ONCLICK="ShowAndHide('q7_solution')">Solution</BUTTON>

<DIV ID="q7_solution" STYLE="display:none">
Here are a couple different solutions. The first one uses the `&` operator:

```r
flights |>
  filter(carrier == "AA", dep_delay > 0 & dep_delay < 10) |>
  count()
```

The second uses the fact that separating statements with a comma within the `filter` function is equivalent to using the `&` operator:

```r
flights |>
  filter(carrier == "AA", dep_delay > 0, dep_delay < 10) |>
  count()
```

Here is code that WILL NOT work (you can't have a chain of inequalities like this in R):

```r
flights |>
  filter(carrier == "AA", 0 < dep_delay < 10) |>
  count()
```
</DIV>